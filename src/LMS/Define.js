import styled from "styled-components";
import { NavLink } from "react-router-dom";
import React from "react";

const Container = styled.div`
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 50px;
`;
const TitleBox = styled.div`
  margin-left: 200px;
  margin-right: 200px;
`;
const Img = styled.div`
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  img {
    width: 60%;
    margin-bottom: 50px;
  }
`;
const Title = styled.div`
  color: #404040;
  margin-bottom: 30px;
`;
const Text = styled.div`
  color: #727272;
  h5 {
    margin-bottom: 30px;
  }
`;
const ListTitle = styled.div`
  color: #404040;
  margin-bottom: 20px;
`;
const List = styled.div`
  color: #727272;
  margin-bottom: 100px;
`;
const MainBox = styled.div`
  margin-bottom: 30px;
`;
const Maintitle = styled.div`
  h2 {
    color: #404040;
  }
  margin-bottom: 20px;
`;
const Maintext = styled.div`
  h5 {
    color: #727272;
    margin-bottom: 20px;
  }
  h3 {
    color: #696969;
  }
  h2 {
    color: #696969;
  }
`;
const GoVodroomBtn = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  margin-top: 30px;
  margin-bottom: 20px;
  button {
    width: 150px;
    height: 50px;
    font-size: 16px;
    border: 1px solid #3c4751;
    border-radius: 10px;
    background-color: rgba(0, 0, 0, 0);
    color: #3c4751;
    transition: background-color 0.3s;
  }
  button:hover {
    background-color: #3c4751;
    color: white;
  }
  h3 {
    color: plum;
    margin-bottom: 10px;
  }
`;
export function Define() {
  return (
    <>
      <Container>
        <TitleBox>
          <Img>
            <img
              src="https://s3.ap-northeast-2.amazonaws.com/blog.spartacodingclub.kr/what-is-coding.png"
              alt=""
            />
          </Img>
          <Title>
            <h1>
              코딩이란? (코딩의 뜻부터 코딩을 배우는 이유, 코딩 공부를 시작하는
              방법까지)
            </h1>
          </Title>
          <Text>
            <h5>
              이제는 전공자, 비전공자 할 것 없이 모두가 코딩을 배우는
              추세입니다. 스파르타코딩클럽에도 초등학생 수강생분들이 계신데요.
              앱개발종합반의 한 초등학생 수강생분은 자신만의 어플을 완성하기도
              했습니다. 이렇게 어릴 적부터 코딩을 공부하는 사람도 빠르게
              증가하고 있습니다.
            </h5>
            <h5>
              과거에 프로그래밍은 개발자들만이 하는 일이었습니다. 대부분의
              비전공자 사람들에게는 미지의 영역과 같았죠. 하지만 더 이상 그렇지
              않습니다. 컴퓨터와 인공지능이 우리의 삶에 더욱더 많은 영향을
              끼치게 되고, 또 비교적 쉽게 배울 수 있는 프로그래밍 언어들이
              생겨나면서 꼭 개발자가 되지 않더라도 충분히 자기계발을 위한 취미나
              개발이 아닌 분야에서 본인의 업무 역량 향상을 위해 코딩을
              공부하기도 합니다.
            </h5>
            <h5>
              하지만 여전히 코딩을 배우는 것이 ‘왜’ 좋은지 잘 모르시는 분들이
              계신 것 같습니다. 그리고 정말로 단기간에 무언가를 만들어내는 것이
              가능한지 스파르타코딩클럽의 커리큘럼을 궁금해하시는 분들도
              계시고요. 그래서 준비했습니다. 코딩이 무엇인지부터 프로그래밍과의
              차이점, 코딩을 배우면 좋은 이유, 어떻게 시작해야 하는지 ‘코딩’에
              대한 전반을 함께 알아보아요. 단순히 많은 사람들이 배운다는 이유
              하나만으로 유행을 좇아 코딩을 배우기보다는 코딩이 무엇인지 정확히
              파악하고 공부한다면 더욱 적극적으로 공부할 수 있지 않을까요?
            </h5>
          </Text>
          <ListTitle>
            <h2>목차</h2>
          </ListTitle>
          <List>
            <h3>1.코딩(Coding)이란? </h3>
            <h3>2.프로그래밍(Programming)이란? </h3>
            <h3>3.왜 코딩을 배우면 좋을까? 코딩을 배우는 이유, 코딩의 장점 </h3>
            <h3>4.코딩 공부를 시작하는 방법</h3>
          </List>
          <MainBox>
            <Maintitle>
              <h2>1. 코딩(Coding)이란?</h2>
            </Maintitle>
            <Img>
              <img
                src="https://s3.ap-northeast-2.amazonaws.com/blog.spartacodingclub.kr/210914_1.png"
                alt=""
              />
            </Img>
            <Maintext>
              <h5>
                코딩은 ‘code’와 ‘ing’의 합성어로, 여기서 코드(code)란
                ‘프로그램에서 작업을 수행하기 위하여 사용되는 하나의 명령어 또는
                몇 개의 명령어들로 구성된 부분’을 뜻합니다. 즉 코딩은
                프로그램에서 작업을 수행하기 위해 사용되는 언어로 컴퓨터에게
                명령하는 것을 말합니다. 간단하게 코딩의 사전적 의미도 보고
                넘어가도록 할까요?
              </h5>
              <h3>코딩의 사전적 의미</h3>
              <h5>1. 어떤 일의 자료나 대상에 대하여 기호를 부여하는 일.</h5>
              <h5>
                2. 작업의 흐름에 따라 프로그램 언어의 명령문을 써서 프로그램을
                작성하는 일.
              </h5>
              <h5>3. 프로그램의 코드를 작성하는 일.</h5>
              <h5>
                사람간에 대화를 할 때 적절한 언어를 선택해 사용합니다. 대화
                상대나 장소에 따라 한국어, 영어, 중국어 등 그에 맞는 언어를
                사용하죠. 코딩도 마찬가지입니다. 코딩을 하기 위한 운영체제나
                명령을 내리기에 적합한 언어를 판단해 사용해야 합니다. C, Java,
                Python, Kotlin, PHP 등 다양한 언어들 중에서 말이죠.
              </h5>
              <h5>
                이렇게 코딩을 해서 컴퓨터에게 명령을 내리면 하나의 프로그램이
                완성됩니다. 이렇게 프로그램 하나를 만드는 과정을 코딩, 넓은
                의미로는 프로그래밍이라고 합니다. ‘앗, 코딩이랑 프로그래밍이
                어떻게 다른 거지?’ 싶으셨나요? 프로그래밍은 무엇이고, 코딩과
                프로그래밍의 차이점은 무엇인지 짚고 넘어가도록 해요.
              </h5>
            </Maintext>
          </MainBox>
          <MainBox>
            <Maintitle>
              <h2>2. 프로그래밍(Programming)이란?</h2>
            </Maintitle>
            <Maintext>
              <h3>프로그래밍의 사전적 의미</h3>
              <h5>1. 수식이나 작업을 컴퓨터에 맞도록 정리해서</h5>
              <h5>2. 그 순서를 정하고</h5>
              <h5>3. 컴퓨터 특유의 명령코드로 고쳐 쓰는 작업</h5>
              <h5>
                프로그래밍은 ‘수식이나 작업을 컴퓨터에 알맞도록 정리해서 순서를
                정하고 컴퓨터 특유의 명령코드로 고쳐 쓰는 작업’을 총칭하는
                말입니다. 위에서 명령 코드를 입력하는 것이 코딩이라고 말씀
                드렸는데요. 간단히 정리하면, 프로그래밍은 코딩을 포괄하는 보다
                큰 개념이고, 코딩은 컴퓨터 언어로 명령을 입력하는 작업 정도로
                생각하시면 됩니다.
              </h5>
              <h5>
                그래서 개발자들 사이에서는 단순 코더로 불리기보다는 스스로
                논리를 갖춘 프로그래머로 성장하는 것을 원하는 사람들이 많다고
                해요. 코딩을 할 때 발생하는 문제를 해결하고, 논리적인 구조로
                프로그램을 만드는 사람이야말로 진정한 개발자인 것이죠. 하지만
                평소에는 코딩과 프로그래밍은 큰 구분 없이 사용되고 있긴 합니다.
                그러니 누가 여러분보고 “코딩해?”한다고 해서 “아닌데? 나
                프로그래밍하는 거거든?!!”이라고 분노하며 반박할 필요는 없을 것
                같아요.
              </h5>
            </Maintext>
          </MainBox>
          <MainBox>
            <Maintitle>
              <h2>3. 왜 코딩을 배우면 좋을까? 코딩을 배우는 이유</h2>
            </Maintitle>
            <Maintext>
              <h5>
                코딩과 프로그래밍의 차이점까지 알아 보았는데요. 대체 컴퓨터에게
                명령을 내리는 것이 뭐가 중요하길래 전공을 불문하고 점점 더 많은
                사람들이 코딩을 배우려고 하고, 정부에서도 의무 교육으로 지정해
                코딩 공부를 장려할까요?
              </h5>
              <h5>
                이는 학교에서 수학을 배우는 이유와 비슷합니다. 우리가 학교에서
                수학을 배우면 모두가 수학자가 되나요? 그렇지 않죠. 꼭 수학자가
                되기 위해 수학을 배우는 게 아니듯, 코딩도 개발자가 되고 싶을
                때만 배우는 것이 아닙니다. 수학을 배우는 이유는 수학적 사고력을
                기르기 위함이 가장 클 것입니다.
              </h5>
              <h5>
                수학을 배워 수학적 사고력을 기를 수 있듯이 코딩을 배우면 사고의
                논리력과 문제해결능력 등을 기를 수 있습니다. 물론, 코딩을
                배우고자 하는 사람의 목표에 따라 배우는 목적이 달라질 수는
                있습니다. 그렇다면 어떻게 문제해결능력과 논리적 사고를 기를 수
                있다는 것일까요?
              </h5>
              <h5>
                컴퓨터는 인간과 다른 존재입니다. 컴퓨터를 움직이게 하기 위해서는
                그들에게 아주 친절하다 못해 하나하나 세세한 사항을 전부 다
                알려주어야 합니다. 사람들과 대화하는 것처럼 컴퓨터와 소통을
                시도하면 어떻게 되냐고요? 다음 영상을 봐보시면 알게 될 겁니다.
                이마를 탁-치며 말하겠죠. “아이고, 두(頭)야~”
              </h5>
              <h5>
                컴퓨터에 명령을 입력할 때에는 어린 아이에게 말하는 것보다 더
                단순하고 논리적으로, 체계적으로 명령을 해야 합니다. 처음에는
                ‘이런 것까지 내가 일일이 다 입력해야 돼?’ 싶을 수도 있어요.
                하지만 코딩을 하다 보면 자연스럽게 논리력을 갖추게 되실 거예요.
              </h5>
              <Img>
                <img
                  src="https://s3.ap-northeast-2.amazonaws.com/blog.spartacodingclub.kr/210914_2.jpg"
                  alt=""
                />
              </Img>
              <h5>
                프로그래밍을 하다 보면, 수많은 에러를 마주하게 되실 텐데요. 그
                에러들을 하나하나 해결해 나갈 때마다 문제해결능력도 기르실 수
                있습니다. 혹 때로는 그 반대 상황에 봉착할 때도 있습니다. 바로
                여러분이 작성한 코드가 왜 작동하는지를 잘 모르는 경우죠. 그런
                경우에도 왜 이게 작동하는 것인지 고민해 보세요. 프로그래밍을
                하는 전 과정은 여러분의 문제해결능력을 향상시켜 줄 소중한 경험이
                될 겁니다.
              </h5>
            </Maintext>
          </MainBox>
          <MainBox>
            <Maintitle>
              <h2>4. 코딩 공부를 시작하는 방법</h2>
            </Maintitle>
            <Maintext>
              <h5>
                그래요, 코딩을 배우면 논리적 사고를 기를 수 있고, 문제해결력을
                갖출 수 있다는 것은 알겠어요. 그러면 이제 코딩을 공부해보고
                싶은데, 어떻게 시작하면 좋을까요? 싶으신 분들이 계실 텐데요.
                특히나 한 번도 시도해보지 않았다면 더더욱 코딩 공부를 시작하기가
                두려우실 수도 있을 것 같습니다.
              </h5>
              <h5>
                우선, 결론부터 말씀 드리자면 HTML, CSS와 함께 웹 개발로 코딩을
                시작하는 것을 추천드립니다. 웹 개발은 다른 개발에 비해 난이도가
                낮은 편이기 때문에 코딩을 접해보지 않으신 분들도 비교적 쉽게
                시작할 수 있다는 장점이 있습니다. 웹사이트를 만들면서 전반적인
                프로그래밍 동작 원리를 한판 이해하실 수 있습니다. 간단한 나만의
                웹사이트를 만들며 프로그래밍에 친숙해져 보세요!
              </h5>
              <h5>
                코딩이란 무엇인지, 프로그래밍은 또 어떤 것인지, 왜 우리는 코딩을
                배워야 하는지, 코딩을 처음 배울 때 어떻게 시작하면 좋을지 등
                코딩 공부 시작 전반을 훑어보았습니다. 어떠셨나요? 낯설었던
                코딩이 조금은 괜찮아지셨나요? 가장 중요한 마인드는 처음부터
                완벽하게 모든 것을 이해하려는 태도입니다.
              </h5>
              <h5>
                코딩은 결국 수단입니다. 개발 분야를 연구하실 게 아니라면
                여러분의 아이디어를 코딩을 통해 현실로 구현하는 것이 가장
                중요합니다. 나만의 것을 만들기 위해서는 코딩에 꾸준히 흥미를
                가져야겠죠. 스파르타코딩클럽에서는 누구나 쉽고 빠르게 결과물을
                만들며 코딩에 흥미를 느끼실 수 있습니다. 만약 배워보고 운이 좋아
                본인의 적성에도 맞다면 소프트웨어 엔지니어의 길로 들어서는 것도
                고려해볼 수 있겠죠.
              </h5>
            </Maintext>
          </MainBox>
          <GoVodroomBtn>
            <h3>누구나 쉽게 배울 수 있는 웹개발 강의 보러가기</h3>
            <NavLink to="/main/VodRoom">
              <button>강의보러가기→</button>
            </NavLink>
          </GoVodroomBtn>
        </TitleBox>
      </Container>
    </>
  );
}
